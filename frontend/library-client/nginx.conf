server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        text/css
        text/javascript
        text/plain;

    # API proxy to prevent CORS issues
    location /api/ {
        proxy_pass http://library_api:8001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Handle placeholder image specifically
    location = /assets/book-placeholder.jpg {
        alias /usr/share/nginx/html/assets/book-placeholder.jpg;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Handle placeholder and other static assets
    location /assets/ {
        alias /usr/share/nginx/html/assets/;
        try_files $uri =404;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Handle book cover images - primary location block
    location /uploads/covers/ {
        alias /usr/share/nginx/uploads/covers/;
        try_files $uri /assets/book-placeholder.jpg =404;
        add_header Cache-Control "no-cache";
    }

    # General uploads location - lower priority than /uploads/covers/
    location /uploads/ {
        alias /usr/share/nginx/uploads/;
        try_files $uri $uri/ /assets/book-placeholder.jpg =404;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # SPA routing - must be after other more specific routes
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets except JS for development
    location ~* \.(jpg|jpeg|png|gif|ico|css|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # Disable caching for JS files
    location ~* \.js$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

    # Disable caching for service worker
    location = /service-worker.js {
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
