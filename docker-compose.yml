version: '3.8'

services:
  db:
    image: postgres:16.2-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: library_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - library-network

  api:
    build: ./backend/LibraryAPI
    container_name: library_api
    ports:
      - "8001:8001"
    depends_on:
      - db
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=library_db;Username=admin;Password=admin
      - PORT=8001
      # Configure CORS for local development
      - AllowedOrigins__0=http://localhost:3000
      - AllowedOrigins__1=http://frontend:80
      - AllowedOrigins__2=*
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_FORWARDEDHEADERS_KNOWNNETWORKS=
      - ASPNETCORE_FORWARDEDHEADERS_KNOWNPROXIES=
      - ASPNETCORE_HTTPS_PORT=443
      # Add this to ensure URLs are generated correctly
      - ASPNETCORE_URLS=http://+:8001
    volumes:
      - book_covers:/app/wwwroot/uploads/covers
    networks:
      - library-network

  frontend:
    build: ./frontend/library-client
    container_name: library_frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    environment:
      - VITE_API_URL=http://api:8001/api
    volumes:
      - book_covers:/usr/share/nginx/uploads/covers:ro
    networks:
      - library-network

networks:
  library-network:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data
  book_covers:
    name: book_covers
